# Project in Computer Systems
# Uppsala University - 2020 Autumn
# Copyright (c) 2020 group CovSim2: Henrik Schulze,
# Christopher Rydell, Jonatan Michalak, Amina Manafli, Wenhao Zhu.
#
# We don't have any unit tests.
# To reduce the risk of getting new bugs, here are some commands that
# to some extent may replace the need for unit tests. What to look for
# is that the code compiles and runs without errors _and_ that the output
# looks reasonable.

tools/compileAndRun matrixC19

# 2 Regions, matrix, random graph, nw-small-world:
tools/compileAndRun cov-sim        # This MUST be compiled beforehand.
bin/cov-sim -ip < mx-2Regions.json
bin/cov-sim -ip < rg-2Regions.json
bin/cov-sim -ip < sw-2Regions.json

# Newman-Watts small world network:
tools/compileAndRun cov-sim && tools/compileAndRun gen-sw
bin/gen-sw -o -N 10000 -k 10 -p 0.001 | bin/gen-sw -or -N 5000 -k 15 -p 0.003 > sw-2R-fromFile.txt
bin/cov-sim -ip < sw-2R-fromFile.json

# Random network in which (almost) all agents have the same number of connections:
tools/compileAndRun cov-sim && tools/compileAndRun gen-rg
bin/gen-rg -o -N 10000 -c 20 | bin/gen-rg -or -N 5000 -c 30 > rg-2R-fromFile.txt
bin/cov-sim -ip < rg-2R-fromFile.json

# Also - requires only `tools/compileAndRun cov-sim` beforehand:
bin/cov-sim -ip < rg,N=8,N0=3,i=4.json
bin/cov-sim -ip < rg,N=25,N0=7,i=4.json
bin/cov-sim -ip < sw-3Regions.json
bin/cov-sim -ips < mx,L=7,D0=2,i=4.json
bin/cov-sim -ips < rg,N=49,N0=16,i=4.json
bin/cov-sim -ips < sw,N=49,k=8,i=4.json
bin/cov-sim -ips < mx,L=51,D0=2,i=4.json
bin/cov-sim -ips < rg,N=2601,N0=23,i=4.json
bin/cov-sim -ips < sw,N=2601,k=12,i=4.json
bin/cov-sim -ips < mx,L=71,D0=5,i=4.json
bin/cov-sim -ips < rg,N=5041,N0=114,i=4.json
bin/cov-sim -ips < sw,N=5041,k=57,i=4.json
bin/cov-sim -ips < rg-vac_strat-high.json
bin/cov-sim -ips < rg-vac_strat-low.json
bin/cov-sim -ips < rg-vac_strat-rndm.json

# Random network for 100k agents - each agent has 15 connections:
tools/compileAndRun cov-sim && tools/compileAndRun gen-rg # Compile first.
bin/gen-rg -o -N 100000 -c 15 > rg-100k-15-fromFile.txt
bin/cov-sim -ips < rg-100k-frFile-vs-none.json
bin/cov-sim -ips < rg-100k-frFile-vs-rndm.json
bin/cov-sim -ips < rg-100k-frFile-vs-high.json
bin/cov-sim -ips < rg-100k-frFile-vs-low.json

bin/gen-rg -o -N 1000000 -c 15 > rg-1M-15-fromFile.txt
bin/cov-sim -ips < rg-1M-frFile-vs-none.json
bin/cov-sim -ips < rg-1M-frFile-vs-rndm.json
bin/cov-sim -ips < rg-1M-frFile-vs-high.json
bin/cov-sim -ips < rg-1M-frFile-vs-low.json

# For the presentation, 10 regions representing the ten largest municipalities of Sweden:
tools/compileAndRun cov-sim && tools/compileAndRun gen-rg # Compile first.
bin/gen-rg -o -N 47027 -c 22 | bin/gen-rg -or -N 47723 -c 23 | bin/gen-rg -or -N 49244 -c 24 | bin/gen-rg -or -N 51349 -c 25 | bin/gen-rg -or -N 51898 -c 26 | bin/gen-rg -or -N 54350 -c 28 | bin/gen-rg -or -N 76922 -c 35 | bin/gen-rg -or -N 114722 -c 45 | bin/gen-rg -or -N 193093 -c 56 | bin/gen-rg -or -N 324691 -c 67 > rg_10R_vs-fromFile.txt
# ^^ A corresponding graph generation could be done
# for the Newman-Watts small world as well. See 'sw_10R_vac-none.json'. ^^
bin/cov-sim -iops < rg_10R_vs-frFile-none.json > rg_10R_vs-RESULT-none.json
bin/cov-sim -iops < rg_10R_vs-frFile-rndm.json > rg_10R_vs-RESULT-rndm.json
bin/cov-sim -iops < rg_10R_vs-frFile-high.json > rg_10R_vs-RESULT-high.json
bin/cov-sim -iops < rg_10R_vs-frFile-low.json  > rg_10R_vs-RESULT-low.json
